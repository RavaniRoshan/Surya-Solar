# Fly.io deployment configuration for Solar Weather API

app = "solar-weather-api"
primary_region = "ord"  # Chicago - good for US coverage

[build]
  builder = "paketobuildpacks/builder:base"
  buildpacks = ["gcr.io/paketo-buildpacks/python"]

[env]
  ENVIRONMENT = "production"
  PORT = "8000"
  PYTHON_VERSION = "3.9"

[http_service]
  internal_port = 8000
  force_https = true
  auto_stop_machines = true
  auto_start_machines = true
  min_machines_running = 1
  processes = ["app"]

  [http_service.concurrency]
    type = "connections"
    hard_limit = 1000
    soft_limit = 800

[[services]]
  protocol = "tcp"
  internal_port = 8000
  processes = ["app"]

  [[services.ports]]
    port = 80
    handlers = ["http"]
    force_https = true

  [[services.ports]]
    port = 443
    handlers = ["tls", "http"]

  [services.concurrency]
    type = "connections"
    hard_limit = 1000
    soft_limit = 800

  [[services.tcp_checks]]
    interval = "15s"
    timeout = "2s"
    grace_period = "5s"

  [[services.http_checks]]
    interval = "30s"
    timeout = "5s"
    grace_period = "10s"
    method = "GET"
    path = "/health"
    protocol = "http"
    tls_skip_verify = false

    [services.http_checks.headers]
      Content-Type = "application/json"

[[vm]]
  cpu_kind = "shared"
  cpus = 1
  memory_mb = 512

[deploy]
  release_command = "python -m app.cli.migrate"
  strategy = "rolling"

[processes]
  app = "uvicorn app.main:app --host 0.0.0.0 --port 8000 --workers 2"
  scheduler = "python -m app.cli.scheduler"

# Environment-specific configurations
[env.production]
  LOG_LEVEL = "INFO"
  DEBUG = "false"

[env.staging]
  LOG_LEVEL = "DEBUG"
  DEBUG = "true"